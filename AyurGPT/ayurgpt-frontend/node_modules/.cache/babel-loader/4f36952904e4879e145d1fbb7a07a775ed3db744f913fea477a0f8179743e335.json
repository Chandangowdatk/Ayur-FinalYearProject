{"ast":null,"code":"var _jsxFileName = \"/Users/chandangowdatk/Development/Ayur-FinalYearProject/AyurGPT/ayurgpt-frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n        try {\n          const response = await axios.get('/api/user/');\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (err) {\n          // Token is invalid or expired\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          delete axios.defaults.headers.common['Authorization'];\n          setError('Session expired. Please login again.');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await axios.post('/api/login/', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$no, _err$response2, _err$response2$data, _err$response2$data$e, _err$response3, _err$response3$data, _err$response3$data$p, _err$response4, _err$response4$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$no = _err$response$data.non_field_errors) === null || _err$response$data$no === void 0 ? void 0 : _err$response$data$no[0]) || ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$e = _err$response2$data.email) === null || _err$response2$data$e === void 0 ? void 0 : _err$response2$data$e[0]) || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : (_err$response3$data$p = _err$response3$data.password) === null || _err$response3$data$p === void 0 ? void 0 : _err$response3$data$p[0]) || ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Login failed. Please try again.';\n      setError(errorMessage);\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    setError(null);\n    try {\n      const response = await axios.post('/api/register/', userData);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Registration failed. Please try again.');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","checkAuth","token","localStorage","getItem","defaults","headers","common","response","get","data","err","removeItem","login","email","password","post","setItem","JSON","stringify","_err$response","_err$response$data","_err$response$data$no","_err$response2","_err$response2$data","_err$response2$data$e","_err$response3","_err$response3$data","_err$response3$data$p","_err$response4","_err$response4$data","errorMessage","non_field_errors","register","userData","_err$response5","_err$response5$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/chandangowdatk/Development/Ayur-FinalYearProject/AyurGPT/ayurgpt-frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// Create the context\nconst AuthContext = createContext();\n\n// Create a provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n        try {\n          const response = await axios.get('/api/user/');\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (err) {\n          // Token is invalid or expired\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          delete axios.defaults.headers.common['Authorization'];\n          setError('Session expired. Please login again.');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await axios.post('/api/login/', { email, password });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (err) {\n      const errorMessage = \n        err.response?.data?.non_field_errors?.[0] || \n        err.response?.data?.email?.[0] ||\n        err.response?.data?.password?.[0] ||\n        err.response?.data?.error || \n        'Login failed. Please try again.';\n      setError(errorMessage);\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    setError(null);\n    try {\n      const response = await axios.post('/api/register/', userData);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n      setUser(response.data.user);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.error || 'Registration failed. Please try again.');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        error,\n        login,\n        register,\n        logout,\n        setError\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}